@model LOLChampions.Champion

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" style="background-color: rgba(19, 49, 61, 0.77);">
        <h2 class="text-center">@Html.DisplayFor(model => model.ChampionName)</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                 @Html.EditorFor(model => model.Picture, new {htmlAttributes = new { @class = "form-control col-md-6",
                placeholder = "http://vignette2.wikia.nocookie.net/yearinfandom/images/1/15/League-of-legends-icons-15.png/revision/latest?cb=20151110224422"
            }
            })
                @Html.ValidationMessageFor(model => model.Picture, null, new { @class = "text-danger col-md-6" }) 
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ChampionName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="control-label col-md-2"><strong> Champion Name </strong></div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChampionName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChampionName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control col-md-6", rows = 10 } })
                @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.WinRate, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="control-label col-md-2"><strong> Win Rate </strong></div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.WinRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WinRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div style="display:none;">
            <div class="form-group">
                @Html.LabelFor(model => model.Likes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Likes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Likes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Dislikes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Dislikes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Dislikes, "", new { @class = "text-danger" })
                </div>
            </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
